# Etapa de construcción
FROM openjdk:17-jdk-alpine AS builder

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos de Maven/Gradle (ajusta según uses Maven o Gradle)
COPY pom.xml ./
COPY src ./src

# Construir la aplicación (ejemplo con Maven; cambia a Gradle si es necesario)
RUN ./mvnw clean package -DskipTests

# Etapa de producción
FROM openjdk:17-jre-alpine

# Crear un usuario no root
RUN addgroup -g 1001 -S spring && adduser -S spring -u 1001

# Establecer directorio de trabajo
WORKDIR /app

# Copiar el JAR desde la etapa de construcción
COPY --from=builder /app/target/*.jar app.jar

# Cambiar propietario de los archivos
RUN chown -R spring:spring /app

# Cambiar a usuario no root
USER spring

# Exponer puerto (por defecto 8080 en Spring Boot)
EXPOSE 8080

# Health check (verifica si la app responde en /actuator/health si tienes Spring Boot Actuator)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1

# Comando para ejecutar la aplicación
ENTRYPOINT ["java", "-jar", "app.jar"]